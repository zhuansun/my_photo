<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<configuration status="WARN" monitorInterval="30">


    <Properties>
        <!-- 日志的输出格式 -->
        <property name="logPattern">%d{yyyy-MM-dd HH:mm:ss z} %-5level %class{36} %L %M - %msg%xEx%n</property>
        <!-- 日志输出文件的bath路径，对于linux是在 cd /data/... -->
        <property name="basePath">D:\\workspace_my\\logs</property>
        <!-- 项目名称，目前还不知道有什么用 -->
        <property name="projectName">submit</property>
    </Properties>

    <!--先定义所有的appender-->
    <appenders>
        <!--这个输出控制台的配置-->
        <console name="Console" target="SYSTEM_OUT">
            <!--输出日志的格式-->
            <PatternLayout pattern="${logPattern}"/>
        </console>

        <!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用-->
        <File name="log" fileName="${basePath}/${projectName}/test.log" append="false">
            <PatternLayout pattern="${logPattern}"/>
        </File>

        <!-- 这个会打印出所有的info及以上级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="RollingFileInfo"
                     fileName="${basePath}/${projectName}/info.log"
                     filePattern="${basePath}/${projectName}/$${date:yyyy-MM}/info-%d{yyyy-MM-dd}-%i.log"
                     immediateFlush="true">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY"/>
            <!-- 输出格式 -->
            <PatternLayout pattern="${logPattern}"/>
            <!-- 控制输出文件大小 -->
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="100MB"/>
            </Policies>
            <!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了100 -->
            <DefaultRolloverStrategy max="100"/>
        </RollingFile>


        <!-- WARN级别及以上日志的输出 ：warn.log -->
        <RollingFile name="RollingFileWarn"
                     fileName="${basePath}/${projectName}/warn.log"
                     filePattern="${basePath}/${projectName}/$${date:yyyy-MM}/warn-%d{yyyy-MM-dd}-%i.log"
                     immediateFlush="true">

            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="WARN" onMatch="ACCEPT" onMismatch="DENY"/>
            <!-- 输出格式 -->
            <PatternLayout pattern="${logPattern}"/>
            <!-- 控制输出文件大小 -->
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="100MB"/>
            </Policies>
            <!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了100 -->
            <DefaultRolloverStrategy max="100"/>
        </RollingFile>


        <!-- ERROR级别及以上的日志的输出 ：error.log -->
        <RollingFile name="RollingFileError" fileName="${basePath}/${projectName}/error.log"
                     filePattern="${basePath}/${projectName}/$${date:yyyy-MM}/error-%d{yyyy-MM-dd}-%i.log">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="ERROR" onMatch="ACCEPT" onMismatch="DENY"/>
            <!-- 输出格式 -->
            <PatternLayout pattern="${logPattern}"/>
            <!-- 控制输出文件大小 -->
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="50MB"/>
            </Policies>
            <!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了100 -->
            <DefaultRolloverStrategy max="100"/>
        </RollingFile>



    </appenders>
    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>
        <!--过滤掉spring、zookerper、motan、rocketmq的一些无用的信息-->
        <logger name="org.springframework" level="ERROR" additivity="false"/>
        <logger name="org.apache.zookeeper" level="ERROR" additivity="false"/>
        <logger name="com.weibo" level="ERROR" additivity="false"/>
        <logger name="com.alibaba.rocketmq" level="ERROR" additivity="false"/>

        <!-- 配置下面的才会生效 -->
        <root level="INFO">
            <appender-ref ref="Console"/>
            <appender-ref ref="RollingFileInfo"/>
            <appender-ref ref="RollingFileWarn"/>
            <appender-ref ref="RollingFileError"/>
        </root>
    </loggers>
</configuration>